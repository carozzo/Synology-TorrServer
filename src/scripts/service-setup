### Generic variables and functions
### -------------------------------

if [ -z "${SYNOPKG_PKGNAME}" ] || [ -z "${SYNOPKG_DSM_VERSION_MAJOR}" ]; then
  echo "Error: Environment variables are not set." 1>&2;
  echo "Please run me using synopkg instead. Example: \"synopkg start [packagename]\"" 1>&2;
  exit 1
fi

USER="TorrServer"
EFF_USER="TorrServer"

# start-stop-status script redirect stdout/stderr to LOG_FILE
LOG_FILE="${SYNOPKG_PKGVAR}/${SYNOPKG_PKGNAME}.log"

# Service command has to deliver its pid into PID_FILE
PID_FILE="${SYNOPKG_PKGVAR}/${SYNOPKG_PKGNAME}.pid"

# Package config files
CONFIG_DIR="${SYNOPKG_PKGVAR}"

### Package specific variables and functions
### ----------------------------------------

if [ -r "${CONFIG_DIR}/accs.db" ]; then
    SERVICE_COMMAND="${SYNOPKG_PKGDEST}/bin/TorrServer -d ${SYNOPKG_PKGVAR} -a -l ${LOG_FILE}"
else
    SERVICE_COMMAND="${SYNOPKG_PKGDEST}/bin/TorrServer -d ${SYNOPKG_PKGVAR} -l ${LOG_FILE}"
fi

SVC_BACKGROUND=y
SVC_WRITE_PID=y

service_postinst ()
{
 if [ "${SYNOPKG_PKG_STATUS}" = "INSTALL" ]; then
    if [ "${wizard_enable_aut}" = "true" ]; then
       echo -e "{ \n\"admin\":\"admin\" \n}" >> ${SYNOPKG_PKGVAR}/accs.db
       sed -i -e "s|@user@|${wizard_username:=admin}|g" >> ${SYNOPKG_PKGVAR}/accs.db
       sed -i -e "s|@password@|${wizard_password:=admin}|g" >> ${SYNOPKG_PKGVAR}/accs.db
    fi
 fi
}

service_preupgrade ()
{
    # Copy config files and removing old files.
    if [ -d ${SYNOPKG_PKGDEST}/config/ -a "$(ls -A ${SYNOPKG_PKGDEST}/config/ 2>/dev/null)" ]; then
        #Removing old files used before ver. 1.2.125.
        if [ -r "${SYNOPKG_PKGDEST}/config/${SYNOPKG_PKGNAME}.sc" ]; then
           $RM ${SYNOPKG_PKGDEST}/config/${SYNOPKG_PKGNAME}.sc | install_log
        fi

        # Copy config files to temporary directory.
           echo "Backup target/config folder" | install_log
           echo "$RSYNC ${SYNOPKG_PKGDEST}/config/ ${TMP_DIR}" | install_log
           $RSYNC ${SYNOPKG_PKGDEST}/config/ ${TMP_DIR} 2>&1 | install_log
    fi
}
